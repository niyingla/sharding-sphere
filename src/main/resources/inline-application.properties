#  ----------------------\u5206\u5E93\u914D\u7F6E--------------------------
# database-strategy.inline \u5E93\u5206\u7247\u7B56\u7565   +   \u6307\u5B9A\u5206\u5E93\u7684\u5206\u7247\u952E
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
# database-strategy.inline.algorithm-expression \u5206\u7247\u7B97\u6CD5\u8868\u8FBE\u5F0F
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}

# ---------------------- t_order\u5206\u8868\u914D\u7F6E----------------------
# t_order \u5206\u5E93\u5206\u8868\u540E\u771F\u5B9E\u7684\u6570\u636E\u8282\u70B9(\u903B\u8F91\u8868 -> \u771F\u5B9E\u8868)
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order$->{0..1}
#   \u5206\u7247\u952E\u8BBE\u7F6E
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}

# \u4E3B\u952E\u751F\u6210 sharding jdbc \u9ED8\u8BA4\u4E3B\u952E\u7B97\u6CD5\u662F 64\u4F4D\u96EA\u82B1\u7B97\u6CD5
# sharding.jdbc.config.sharding.tables.t_order.key-generator-class-name=io.shardingsphere.core.keygen.DefaultKeyGenerator
# sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=id

# ---------------------- \u7ED1\u5B9A\u8868t_order_item\u5206\u8868\u914D\u7F6E ----------------------
sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
# \u5206\u7247\u952E\u8BBE\u7F6E
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}
# \u8BBE\u7F6E\u7ED1\u5B9A\u8868
sharding.jdbc.config.sharding.binding-tables=t_order,t_order_item